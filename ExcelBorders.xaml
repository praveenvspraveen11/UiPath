<Activity mc:Ignorable="sap sap2010" x:Class="ExcelBorders" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="896,613.6" sap2010:WorkflowViewState.IdRef="ExcelBorders_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This code scippet is used to set excel borders for a given range using custom code" DisplayName="ExcelBorders" sap:VirtualizedContainerService.HintSize="375.2,394.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,257.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim excel As Microsoft.Office.Interop.Excel.Application&#xD;&#xA;Dim wb As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;Dim ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range&#xD;&#xA;&#xD;&#xA;excel = New Microsoft.Office.Interop.Excel.ApplicationClass&#xD;&#xA;wb = excel.Workbooks.Open(in_ExcelPath)&#xD;&#xA;excel.Visible=False&#xD;&#xA;ws=CType(wb.Sheets(in_SheetName),Microsoft.Office.Interop.Excel.Worksheet)&#xD;&#xA;ws.Range(in_RangeValue).Cells.Borders.LineStyle = XlLineStyle.xlDot&#xD;&#xA;wb.Save&#xD;&#xA;wb.Close" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_ExcelPath">C:\Users\User\Desktop\Test.xlsx</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">ExcelBorder</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_RangeValue">A1:AB17751</InArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim excel As Microsoft.Office.Interop.Excel.Application&#xD;&#xA;Dim wb As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;Dim ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range&#xD;&#xA;&#xD;&#xA;excel = New Microsoft.Office.Interop.Excel.ApplicationClass&#xD;&#xA;wb = excel.Workbooks.Open(&quot;C:\Users\User\Desktop\Test.xlsx&quot;)&#xD;&#xA;excel.Visible=False&#xD;&#xA;ws=CType(wb.Sheets(&quot;Sheet1&quot;),Microsoft.Office.Interop.Excel.Worksheet)&#xD;&#xA;ws.Cells.EntireColumn.autofit()&#xD;&#xA;'ws.Range(&quot;A1:H1&quot;).entirecolumn.autofit()&#xD;&#xA;wb.Save&#xD;&#xA;wb.Close" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExcelPath">C:\Users\User\Desktop\Test.xlsx</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">ExcelBorder</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_RangeValue">A1:AB17751</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>